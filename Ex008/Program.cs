// Урок 5. Функции и одномерные массивы
// Задача 34: Задайте массив заполненный случайными положительными трёхзначными числами. Напишите программу, которая покажет количество чётных чисел в массиве.
// [345, 897, 568, 234] -> 2

// ---------------------------------

// Решение задачи 34
// int lengthArray = 10; // переменная lengthArray определяет размер массива
// int[] array = new int[lengthArray]; // создаем новый массив array с размером lengthArray
// int randomNumber0 = new Random().Next(100, 1000); // генерируем случайное 3-значное число и передаем его переменной randomNumber0
// array[0] = randomNumber0; // передаем полученное значение первому элементу нашего массива (индекс 0)
// Console.WriteLine(); // добавляем пустую строку для красоты
// Console.Write("[ " + array[0]); // выводми в консоль квадратную + первый элемент массива без переноса на новую строку
// for (int i = 1; i < lengthArray; i++) // используем цикл для задания остальных элементов массива
// {
//     int randomNumber = new Random().Next(100, 1000); // переменной randomNumber задаем случайное 3-значное число на каждом шаге
//     array[i] = randomNumber; // каждому элементу с индексом i передаем сгенерированное число
//     Console.Write(", " + array[i]); // выводим какждый элемнт массива в одну строку через запятую
// }
// Console.WriteLine(" ]"); // закрываем наш массив квадратной скобкой, выводя соответствующее значение в консоль
// Console.WriteLine(); // добавляем пустую строку
// int counter = 0; // задем переменную counter, чтобы в нее аккумулировать количество четных значений элементов массива
// for (int i = 0; i < lengthArray; i++) // пробегаем в цикле по всем элементам массива
//     if (array[i]%2 == 0) counter++; // проверяем на условие четности, и увеличиваем счетчик counter на 1 если условие четности выполняется
// if (counter == 0) Console.WriteLine("В этом массиве нет ни одного четного числа"); // если counter = 0 значит нет четных элементов, выводим сообщение в консоль
// else Console.WriteLine($"Количество четных чисел в этом массиве равно - {counter}"); // иначе выводим в консоль количество четных элементов
// Console.WriteLine(); // пустая строка ))
   
// Задача 36: Задайте одномерный массив, заполненный случайными числами. Найдите сумму элементов, стоящих на нечётных позициях.
// [3, 7, 23, 12] -> 19
// [-4, -6, 89, 6] -> 0

// ---------------------------------

// Решение задачи 36
// int lengthArray = 11; // переменная lengthArray определяет размер массива 
// int[] array = new int[lengthArray]; // задаем новый массив array с размером lengthArray
// int randomNumber0 = new Random().Next(-100, 101); // генерируем случайное число [ -100; 100 ] и передаем его переменной randomNumber0
// array[0] = randomNumber0; // присваиваем первому элементу массива значение пременной randomNumber0
// Console.WriteLine(); // пустая строка
// Console.Write("[ " + array[0]); // выводим в консоль квадратную скобку + первый элемент массива ([ a1)
// for (int i = 1; i < lengthArray; i++) // используем цикл for для того чтобы задать остальные элементы массива аналогично первому
// {
//     int randomNumber = new Random().Next(-100, 101); // генерируем случайное число [ -100; 100 ] и передаем его переменной randomNumber
//     array[i] = randomNumber; // далее значение переменной randomNumber передаем элементу массива с индексом i
//     Console.Write(", " + array[i]); // выводим последовательно каждый элемент массива в одну строку через запятую
// }
// Console.WriteLine(" ]"); // в конце закрываем наш массив квадратной скобкой - > вывод в консоль
// Console.WriteLine(); //пустая строка
// int sumOddNumb = 0; // задаем переменную sumOddNumb равную 0, в нее будем аккумулировать сумму нечетных элементов массива
// for (int i = 1; i < lengthArray; i = i + 2) // в цекле пробегаем по нечетным индексам массива, для этого начинаем i c 1 и шаг берем равный 2 (i = 1; 3; 5; ...)
//     sumOddNumb = sumOddNumb + array[i]; // прибавляем на каждом шаге текущий элемент массива к переменной sumOddNumb
// Console.WriteLine("Сумма нечетных элементов массива равна : " + sumOddNumb); // полученную сумму выводим в консоль
// Console.WriteLine(); // пуста] строка

// Задача 38: Задайте массив вещественных чисел. Найдите разницу между максимальным и минимальным элементов массива.
// [3 7 22 2 78] -> 76

// ---------------------------------

// Решение задачи 38
int lengthArray = 11; // переменная lengthArray определяет размер массива
double[] array = new double[lengthArray]; // задаем новый массив array с размером lengthArray вещественного типа
double randomNumber0 = new Random().NextDouble();// случайное число [ 0, 1 ), так как NextDouble() передает только [ 0, 1 )
randomNumber0 = 200*randomNumber0 - 100; // [ -100 ; 100 ) // преобразовали переменную randomNumber0, чтобы получить значение в интервале [ -100 ; 100 )
randomNumber0 = Math.Round(randomNumber0, 2); // округлим наше случайное число до двух знаков после запятой для сокращения записей в консоль
array[0] = randomNumber0; // передаем наше преобразованное случ вещ число первому элементу массива
Console.WriteLine(); // пустая строка
Console.Write("[ " + array[0]); // выводим его в консоль. Логика такая - чтобы в конечном счете в консоле наш массив выглядел так -> [ 1, 2, ..., n ]
for (int i = 1; i < lengthArray; i++) // используем массив for чтобы задвть остальные элементы массива
{
    double randomNumber = new Random().NextDouble(); // случайное число [ 0, 1) // аналогично как задали первый элемент так же и с каждым
    randomNumber = 200*randomNumber - 100; // [ -100 ; 100 )
    randomNumber = Math.Round(randomNumber, 2); // сократим до двух знаков после запятой
    array[i] = randomNumber; // передали получ случ вещ число элементу массива с индексом i
    Console.Write("; " + array[i]); // выводим поэлементно наш массив в консоль в одну строку через точку с запятой
}
Console.WriteLine(" ]"); // закрываем наш массив квадратной скобкой
Console.WriteLine(); // пустая строка
double maxArray = array[0]; // задаем переменную maxArray со значением первого элемента, для определения максимального значения массива
double minArray = array[0]; // задаем переменную minArray со значением первого элемента, для определения минимального значения массива
for (int i = 0; i < lengthArray; i++) // пробегаем в цикле for по всем элементам массива для определения среди них максимального и минимального значения
{
    if (array[i] > maxArray) maxArray = array[i]; // если элемент с индексом i больше текущего максимума, то пременной maxArray задаем значение элемента с индексом i
    else if (array[i] < minArray) minArray = array[i]; // иначе аналогично с минимальным элементом
}
double differenceМахMin = maxArray - minArray; // перменной differenceМахMin задаем разницу между макс и мин значениями массива
Console.WriteLine($"Разница между максимальным и минимальным элементами массива равна : {differenceМахMin}; max: {maxArray}; min: {minArray}"); // выводим полученные результаты в консоль
Console.WriteLine(); // пустая строка

// Дополнительно. Задания 3, 4 необязательные
// Задача 3: Задайте массив из 8 случайных чисел. Напишите программу, которая определяет, присутствует ли заданное число в массиве.
// 4; массив [6, 7, 19, 345, 3] -> нет
// 3; массив [6, 7, 19, 345, 3] -> да

// ---------------------------------

// Решение задачи 3
// Console.WriteLine(); // пустая строка
// Console.WriteLine("Введите число: "); // запрос в консоли на ввод числа
// Console.WriteLine(); // пустая строка
// int givenNumber = int.Parse(Console.ReadLine()); // считываем с консоли введенное значение, меняем тип на целочисленный и передаем его переменной givenNumber
// int switchNumber = 0; // задаем переменную switchNumber равную 0, (0 - нет, 1 - да)
// int lengthArray = 8; // задаем переменную lengthArray = 8, для задания размера массива
// int[] array = new int[lengthArray]; // задаем новый массив array с размером lengthArray
// int randomNumber0 = new Random().Next(-2, 3); // генерируем случайное число [ -2; 2 ] и передаем его переменной randomNumber0 
// array[0] = randomNumber0; // присваиваем первому элементу массива значение пременной randomNumber0
// Console.WriteLine(); // пустая строка
// Console.Write("[ " + array[0]); // выводим в консоль квадратную скобку + первый элемент массива ([ a1)
// for (int i = 1; i < lengthArray; i++) // используем цикл for для того чтобы задать остальные элементы массива аналогично первому
// {
//     int randomNumber = new Random().Next(-2, 3); // генерируем случайное число [ -2; 2 ] и передаем его переменной randomNumber
//     array[i] = randomNumber; // далее значение переменной randomNumber передаем элементу массива с индексом i
//     Console.Write(", " + array[i]); // выводим последовательно каждый элемент массива в одну строку через запятую
//     if (givenNumber == array[i]) switchNumber = 1; // проверем каждый элемент массива на равенство с введенным числом, если условие выполнено switchNumber становится = 1
// }
// Console.WriteLine(" ]"); // в конце закрываем наш массив квадратной скобкой - > вывод в консоль
// Console.WriteLine(); // пустая строка
// switch (switchNumber) // используем переключатель switch
// {
//     case 0: // если switchNumber = 0 - ответ НЕТ
//         Console.WriteLine($"Нет, заданного числа {givenNumber}, нет в массиве");
//         break;  
//     case 1: // если switchNumber = 1 - ответ ДА
//         Console.WriteLine($"Да, заданное число {givenNumber}, есть в массиве");
//         break;
//     default: // на всякий случай
//         Console.WriteLine("Что-то пошло не так ...");
//         break;
// }
// Console.WriteLine(); // пустая строка

// Задача 4: Задайте массив из 12 случайных чисел. Найдите количество элементов массива, значения которых лежат в отрезке [10,99].
// Пример для массива из 5, а не 12 элементов. В своём решении сделайте для 12
// [5, 18, 123, 6, 2] -> 1
// [1, 2, 3, 6, 2] -> 0
// [10, 11, 12, 13, 14] -> 5

// ---------------------------------

// Решение задачи 4
// int lengthArray = 12; // задаем переменную lengthArray = 12, для задания размера массива 
// int[] array = new int[lengthArray]; // задаем новый массив array с размером lengthArray
// int randomNumber0 = new Random().Next(-100, 151); // генерируем случайное число [ -100; 150 ] и передаем его переменной randomNumber0 
// array[0] = randomNumber0; // присваиваем первому элементу массива значение пременной randomNumber0
// Console.WriteLine(); // пустая строка
// Console.Write("[ " + array[0]); // выводим в консоль квадратную скобку + первый элемент массива ([ a1)
// int counter = 0; // задаем переменную counter = 0, ее будем использовать для подсчета количества элементов массива попадающих в заданный диапозон
// for (int i = 1; i < lengthArray; i++) // используем цикл for для того чтобы задать остальные элементы массива аналогично первому
// {
//     int randomNumber = new Random().Next(-100, 151); // генерируем случайное число [ -100; 150 ] и передаем его переменной randomNumber
//     array[i] = randomNumber; // далее значение переменной randomNumber передаем элементу массива с индексом i
//     Console.Write(", " + array[i]); // выводим последовательно каждый элемент массива в одну строку через запятую
//     if (array[i] <= 99 && array[i] >= 10) counter = counter + 1; // если элемент с индексом i входит в заданный интервал, то увеличиваем счетчик на 1
// }
// Console.WriteLine(" ]"); // в конце закрываем наш массив квадратной скобкой - > вывод в консоль
// Console.WriteLine(); // пустая строка
// Console.WriteLine($"Количество элементов массива, значения которых лежат в отрезке [10, 99] равно: {counter}"); // выводим в консоль количество полученное counter
// Console.WriteLine(); // и еще разок пустая строка